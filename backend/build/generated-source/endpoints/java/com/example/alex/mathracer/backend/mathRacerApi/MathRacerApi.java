/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-10-17 16:43:55 UTC)
 * on 2016-10-23 at 09:04:03 UTC 
 * Modify at your own risk.
 */

package com.example.alex.mathracer.backend.mathRacerApi;

/**
 * Service definition for MathRacerApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MathRacerApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MathRacerApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the mathRacerApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://mathracer-147011.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "mathRacerApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MathRacerApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MathRacerApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addQuestionToRace".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link AddQuestionToRace#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @param studentID
   * @param raceID
   * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Question}
   * @return the request
   */
  public AddQuestionToRace addQuestionToRace(java.lang.Long teacherID, java.lang.Long studentID, java.lang.Long raceID, com.example.alex.mathracer.backend.mathRacerApi.model.Question content) throws java.io.IOException {
    AddQuestionToRace result = new AddQuestionToRace(teacherID, studentID, raceID, content);
    initialize(result);
    return result;
  }

  public class AddQuestionToRace extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.Question> {

    private static final String REST_PATH = "teacher/{teacherID}/student/{studentID}/race/{raceID}/questioon";

    /**
     * Create a request for the method "addQuestionToRace".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link AddQuestionToRace#execute()} method to invoke the remote
     * operation. <p> {@link AddQuestionToRace#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param teacherID
     * @param studentID
     * @param raceID
     * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Question}
     * @since 1.13
     */
    protected AddQuestionToRace(java.lang.Long teacherID, java.lang.Long studentID, java.lang.Long raceID, com.example.alex.mathracer.backend.mathRacerApi.model.Question content) {
      super(MathRacerApi.this, "POST", REST_PATH, content, com.example.alex.mathracer.backend.mathRacerApi.model.Question.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
      this.studentID = com.google.api.client.util.Preconditions.checkNotNull(studentID, "Required parameter studentID must be specified.");
      this.raceID = com.google.api.client.util.Preconditions.checkNotNull(raceID, "Required parameter raceID must be specified.");
    }

    @Override
    public AddQuestionToRace setAlt(java.lang.String alt) {
      return (AddQuestionToRace) super.setAlt(alt);
    }

    @Override
    public AddQuestionToRace setFields(java.lang.String fields) {
      return (AddQuestionToRace) super.setFields(fields);
    }

    @Override
    public AddQuestionToRace setKey(java.lang.String key) {
      return (AddQuestionToRace) super.setKey(key);
    }

    @Override
    public AddQuestionToRace setOauthToken(java.lang.String oauthToken) {
      return (AddQuestionToRace) super.setOauthToken(oauthToken);
    }

    @Override
    public AddQuestionToRace setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddQuestionToRace) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddQuestionToRace setQuotaUser(java.lang.String quotaUser) {
      return (AddQuestionToRace) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddQuestionToRace setUserIp(java.lang.String userIp) {
      return (AddQuestionToRace) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public AddQuestionToRace setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long studentID;

    /**

     */
    public java.lang.Long getStudentID() {
      return studentID;
    }

    public AddQuestionToRace setStudentID(java.lang.Long studentID) {
      this.studentID = studentID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long raceID;

    /**

     */
    public java.lang.Long getRaceID() {
      return raceID;
    }

    public AddQuestionToRace setRaceID(java.lang.Long raceID) {
      this.raceID = raceID;
      return this;
    }

    @Override
    public AddQuestionToRace set(String parameterName, Object value) {
      return (AddQuestionToRace) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addRaceToStudent".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link AddRaceToStudent#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @param studentID
   * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Race}
   * @return the request
   */
  public AddRaceToStudent addRaceToStudent(java.lang.Long teacherID, java.lang.Long studentID, com.example.alex.mathracer.backend.mathRacerApi.model.Race content) throws java.io.IOException {
    AddRaceToStudent result = new AddRaceToStudent(teacherID, studentID, content);
    initialize(result);
    return result;
  }

  public class AddRaceToStudent extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.Race> {

    private static final String REST_PATH = "teacher/{teacherID}/student/{studentID}/race";

    /**
     * Create a request for the method "addRaceToStudent".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link AddRaceToStudent#execute()} method to invoke the remote
     * operation. <p> {@link AddRaceToStudent#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param teacherID
     * @param studentID
     * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Race}
     * @since 1.13
     */
    protected AddRaceToStudent(java.lang.Long teacherID, java.lang.Long studentID, com.example.alex.mathracer.backend.mathRacerApi.model.Race content) {
      super(MathRacerApi.this, "POST", REST_PATH, content, com.example.alex.mathracer.backend.mathRacerApi.model.Race.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
      this.studentID = com.google.api.client.util.Preconditions.checkNotNull(studentID, "Required parameter studentID must be specified.");
    }

    @Override
    public AddRaceToStudent setAlt(java.lang.String alt) {
      return (AddRaceToStudent) super.setAlt(alt);
    }

    @Override
    public AddRaceToStudent setFields(java.lang.String fields) {
      return (AddRaceToStudent) super.setFields(fields);
    }

    @Override
    public AddRaceToStudent setKey(java.lang.String key) {
      return (AddRaceToStudent) super.setKey(key);
    }

    @Override
    public AddRaceToStudent setOauthToken(java.lang.String oauthToken) {
      return (AddRaceToStudent) super.setOauthToken(oauthToken);
    }

    @Override
    public AddRaceToStudent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddRaceToStudent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddRaceToStudent setQuotaUser(java.lang.String quotaUser) {
      return (AddRaceToStudent) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddRaceToStudent setUserIp(java.lang.String userIp) {
      return (AddRaceToStudent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public AddRaceToStudent setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long studentID;

    /**

     */
    public java.lang.Long getStudentID() {
      return studentID;
    }

    public AddRaceToStudent setStudentID(java.lang.Long studentID) {
      this.studentID = studentID;
      return this;
    }

    @Override
    public AddRaceToStudent set(String parameterName, Object value) {
      return (AddRaceToStudent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getQuestions".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link GetQuestions#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @param studentID
   * @param raceID
   * @return the request
   */
  public GetQuestions getQuestions(java.lang.Long teacherID, java.lang.Long studentID, java.lang.Long raceID) throws java.io.IOException {
    GetQuestions result = new GetQuestions(teacherID, studentID, raceID);
    initialize(result);
    return result;
  }

  public class GetQuestions extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.QuestionCollection> {

    private static final String REST_PATH = "teacher/{teacherID}/student/{studentID}/race/{raceID}/questions";

    /**
     * Create a request for the method "getQuestions".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link GetQuestions#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetQuestions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param teacherID
     * @param studentID
     * @param raceID
     * @since 1.13
     */
    protected GetQuestions(java.lang.Long teacherID, java.lang.Long studentID, java.lang.Long raceID) {
      super(MathRacerApi.this, "GET", REST_PATH, null, com.example.alex.mathracer.backend.mathRacerApi.model.QuestionCollection.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
      this.studentID = com.google.api.client.util.Preconditions.checkNotNull(studentID, "Required parameter studentID must be specified.");
      this.raceID = com.google.api.client.util.Preconditions.checkNotNull(raceID, "Required parameter raceID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetQuestions setAlt(java.lang.String alt) {
      return (GetQuestions) super.setAlt(alt);
    }

    @Override
    public GetQuestions setFields(java.lang.String fields) {
      return (GetQuestions) super.setFields(fields);
    }

    @Override
    public GetQuestions setKey(java.lang.String key) {
      return (GetQuestions) super.setKey(key);
    }

    @Override
    public GetQuestions setOauthToken(java.lang.String oauthToken) {
      return (GetQuestions) super.setOauthToken(oauthToken);
    }

    @Override
    public GetQuestions setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetQuestions) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetQuestions setQuotaUser(java.lang.String quotaUser) {
      return (GetQuestions) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetQuestions setUserIp(java.lang.String userIp) {
      return (GetQuestions) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public GetQuestions setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long studentID;

    /**

     */
    public java.lang.Long getStudentID() {
      return studentID;
    }

    public GetQuestions setStudentID(java.lang.Long studentID) {
      this.studentID = studentID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long raceID;

    /**

     */
    public java.lang.Long getRaceID() {
      return raceID;
    }

    public GetQuestions setRaceID(java.lang.Long raceID) {
      this.raceID = raceID;
      return this;
    }

    @Override
    public GetQuestions set(String parameterName, Object value) {
      return (GetQuestions) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRaces".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link GetRaces#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @param studentID
   * @return the request
   */
  public GetRaces getRaces(java.lang.Long teacherID, java.lang.Long studentID) throws java.io.IOException {
    GetRaces result = new GetRaces(teacherID, studentID);
    initialize(result);
    return result;
  }

  public class GetRaces extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.RaceCollection> {

    private static final String REST_PATH = "teacher/{teacherID}/student/{studentID}/races";

    /**
     * Create a request for the method "getRaces".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link GetRaces#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetRaces#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param teacherID
     * @param studentID
     * @since 1.13
     */
    protected GetRaces(java.lang.Long teacherID, java.lang.Long studentID) {
      super(MathRacerApi.this, "GET", REST_PATH, null, com.example.alex.mathracer.backend.mathRacerApi.model.RaceCollection.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
      this.studentID = com.google.api.client.util.Preconditions.checkNotNull(studentID, "Required parameter studentID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRaces setAlt(java.lang.String alt) {
      return (GetRaces) super.setAlt(alt);
    }

    @Override
    public GetRaces setFields(java.lang.String fields) {
      return (GetRaces) super.setFields(fields);
    }

    @Override
    public GetRaces setKey(java.lang.String key) {
      return (GetRaces) super.setKey(key);
    }

    @Override
    public GetRaces setOauthToken(java.lang.String oauthToken) {
      return (GetRaces) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRaces setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRaces) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRaces setQuotaUser(java.lang.String quotaUser) {
      return (GetRaces) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRaces setUserIp(java.lang.String userIp) {
      return (GetRaces) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public GetRaces setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long studentID;

    /**

     */
    public java.lang.Long getStudentID() {
      return studentID;
    }

    public GetRaces setStudentID(java.lang.Long studentID) {
      this.studentID = studentID;
      return this;
    }

    @Override
    public GetRaces set(String parameterName, Object value) {
      return (GetRaces) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStudents".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link GetStudents#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @return the request
   */
  public GetStudents getStudents(java.lang.Long teacherID) throws java.io.IOException {
    GetStudents result = new GetStudents(teacherID);
    initialize(result);
    return result;
  }

  public class GetStudents extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.StudentCollection> {

    private static final String REST_PATH = "teacher/{teacherID}/students";

    /**
     * Create a request for the method "getStudents".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link GetStudents#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetStudents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param teacherID
     * @since 1.13
     */
    protected GetStudents(java.lang.Long teacherID) {
      super(MathRacerApi.this, "GET", REST_PATH, null, com.example.alex.mathracer.backend.mathRacerApi.model.StudentCollection.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStudents setAlt(java.lang.String alt) {
      return (GetStudents) super.setAlt(alt);
    }

    @Override
    public GetStudents setFields(java.lang.String fields) {
      return (GetStudents) super.setFields(fields);
    }

    @Override
    public GetStudents setKey(java.lang.String key) {
      return (GetStudents) super.setKey(key);
    }

    @Override
    public GetStudents setOauthToken(java.lang.String oauthToken) {
      return (GetStudents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStudents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStudents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStudents setQuotaUser(java.lang.String quotaUser) {
      return (GetStudents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStudents setUserIp(java.lang.String userIp) {
      return (GetStudents) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public GetStudents setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @Override
    public GetStudents set(String parameterName, Object value) {
      return (GetStudents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertStudent".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link InsertStudent#execute()} method to invoke the remote operation.
   *
   * @param teacherID
   * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Student}
   * @return the request
   */
  public InsertStudent insertStudent(java.lang.Long teacherID, com.example.alex.mathracer.backend.mathRacerApi.model.Student content) throws java.io.IOException {
    InsertStudent result = new InsertStudent(teacherID, content);
    initialize(result);
    return result;
  }

  public class InsertStudent extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.Student> {

    private static final String REST_PATH = "teacher/{teacherID}/student";

    /**
     * Create a request for the method "insertStudent".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link InsertStudent#execute()} method to invoke the remote
     * operation. <p> {@link InsertStudent#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param teacherID
     * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Student}
     * @since 1.13
     */
    protected InsertStudent(java.lang.Long teacherID, com.example.alex.mathracer.backend.mathRacerApi.model.Student content) {
      super(MathRacerApi.this, "POST", REST_PATH, content, com.example.alex.mathracer.backend.mathRacerApi.model.Student.class);
      this.teacherID = com.google.api.client.util.Preconditions.checkNotNull(teacherID, "Required parameter teacherID must be specified.");
    }

    @Override
    public InsertStudent setAlt(java.lang.String alt) {
      return (InsertStudent) super.setAlt(alt);
    }

    @Override
    public InsertStudent setFields(java.lang.String fields) {
      return (InsertStudent) super.setFields(fields);
    }

    @Override
    public InsertStudent setKey(java.lang.String key) {
      return (InsertStudent) super.setKey(key);
    }

    @Override
    public InsertStudent setOauthToken(java.lang.String oauthToken) {
      return (InsertStudent) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertStudent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertStudent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertStudent setQuotaUser(java.lang.String quotaUser) {
      return (InsertStudent) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertStudent setUserIp(java.lang.String userIp) {
      return (InsertStudent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long teacherID;

    /**

     */
    public java.lang.Long getTeacherID() {
      return teacherID;
    }

    public InsertStudent setTeacherID(java.lang.Long teacherID) {
      this.teacherID = teacherID;
      return this;
    }

    @Override
    public InsertStudent set(String parameterName, Object value) {
      return (InsertStudent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTeacher".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link InsertTeacher#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Teacher}
   * @return the request
   */
  public InsertTeacher insertTeacher(com.example.alex.mathracer.backend.mathRacerApi.model.Teacher content) throws java.io.IOException {
    InsertTeacher result = new InsertTeacher(content);
    initialize(result);
    return result;
  }

  public class InsertTeacher extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.Teacher> {

    private static final String REST_PATH = "teacher";

    /**
     * Create a request for the method "insertTeacher".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link InsertTeacher#execute()} method to invoke the remote
     * operation. <p> {@link InsertTeacher#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.example.alex.mathracer.backend.mathRacerApi.model.Teacher}
     * @since 1.13
     */
    protected InsertTeacher(com.example.alex.mathracer.backend.mathRacerApi.model.Teacher content) {
      super(MathRacerApi.this, "POST", REST_PATH, content, com.example.alex.mathracer.backend.mathRacerApi.model.Teacher.class);
    }

    @Override
    public InsertTeacher setAlt(java.lang.String alt) {
      return (InsertTeacher) super.setAlt(alt);
    }

    @Override
    public InsertTeacher setFields(java.lang.String fields) {
      return (InsertTeacher) super.setFields(fields);
    }

    @Override
    public InsertTeacher setKey(java.lang.String key) {
      return (InsertTeacher) super.setKey(key);
    }

    @Override
    public InsertTeacher setOauthToken(java.lang.String oauthToken) {
      return (InsertTeacher) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTeacher setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTeacher) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTeacher setQuotaUser(java.lang.String quotaUser) {
      return (InsertTeacher) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTeacher setUserIp(java.lang.String userIp) {
      return (InsertTeacher) super.setUserIp(userIp);
    }

    @Override
    public InsertTeacher set(String parameterName, Object value) {
      return (InsertTeacher) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "loginTeacher".
   *
   * This request holds the parameters needed by the mathRacerApi server.  After setting any optional
   * parameters, call the {@link LoginTeacher#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param password
   * @return the request
   */
  public LoginTeacher loginTeacher(java.lang.String id, java.lang.String password) throws java.io.IOException {
    LoginTeacher result = new LoginTeacher(id, password);
    initialize(result);
    return result;
  }

  public class LoginTeacher extends MathRacerApiRequest<com.example.alex.mathracer.backend.mathRacerApi.model.Teacher> {

    private static final String REST_PATH = "loginTeacher";

    /**
     * Create a request for the method "loginTeacher".
     *
     * This request holds the parameters needed by the the mathRacerApi server.  After setting any
     * optional parameters, call the {@link LoginTeacher#execute()} method to invoke the remote
     * operation. <p> {@link
     * LoginTeacher#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param password
     * @since 1.13
     */
    protected LoginTeacher(java.lang.String id, java.lang.String password) {
      super(MathRacerApi.this, "POST", REST_PATH, null, com.example.alex.mathracer.backend.mathRacerApi.model.Teacher.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public LoginTeacher setAlt(java.lang.String alt) {
      return (LoginTeacher) super.setAlt(alt);
    }

    @Override
    public LoginTeacher setFields(java.lang.String fields) {
      return (LoginTeacher) super.setFields(fields);
    }

    @Override
    public LoginTeacher setKey(java.lang.String key) {
      return (LoginTeacher) super.setKey(key);
    }

    @Override
    public LoginTeacher setOauthToken(java.lang.String oauthToken) {
      return (LoginTeacher) super.setOauthToken(oauthToken);
    }

    @Override
    public LoginTeacher setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LoginTeacher) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LoginTeacher setQuotaUser(java.lang.String quotaUser) {
      return (LoginTeacher) super.setQuotaUser(quotaUser);
    }

    @Override
    public LoginTeacher setUserIp(java.lang.String userIp) {
      return (LoginTeacher) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public LoginTeacher setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public LoginTeacher setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public LoginTeacher set(String parameterName, Object value) {
      return (LoginTeacher) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MathRacerApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MathRacerApi}. */
    @Override
    public MathRacerApi build() {
      return new MathRacerApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MathRacerApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMathRacerApiRequestInitializer(
        MathRacerApiRequestInitializer mathracerapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(mathracerapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
